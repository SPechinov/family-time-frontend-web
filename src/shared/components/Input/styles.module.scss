@use "../../../assets/styles/text_mixins";
@use "../../../assets/styles/variables";

.wrapper {
  width: 100%;
}

.inputWrapper {
  position: relative;
  overflow: hidden;
}

.input {
  @include text_mixins.form;

  width: 100%;
  color: var(--input-text);
  padding: 20px 18px 6px 18px;
  background-color: var(--input-background);
  border: 2px solid var(--input-border);
  border-radius: variables.$border-radius-m;
  outline: none;
  transition: border-color variables.$default-transition-time variables.$default-transition-easing;

  &:hover:not(:read-only):not(:disabled) ~ .placeholder,
  &:focus:not(:read-only) ~ .placeholder {
    color: var(--input-text);
  }

  &.error {
    border-color: var(--input-error);
  }

  &:focus:not(:read-only) ~ .placeholder,
  &:not(:placeholder-shown) ~ .placeholder {
    @include text_mixins.form-placeholder(true);
  }

  &:disabled {
    color: var(--input-disabled-text);
  }

  &:not(:disabled):read-only {
    border-style: dashed;
  }
}

.placeholder {
  @include text_mixins.form-placeholder(false);

  position: absolute;
  top: 7px;
  left: 20px;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  max-width: calc(100% - 40px);
  color: var(--input-placeholder);
  pointer-events: none;
  transition:
    font-size variables.$default-transition-time variables.$default-transition-easing,
    line-height variables.$default-transition-time variables.$default-transition-easing,
    color variables.$default-transition-time variables.$default-transition-easing;
}

.endAdornment {
  position: absolute;
  top: 50%;
  right: 0;
  padding-right: 20px;
  display: flex;
  align-items: center;
  transform: translateY(-50%);

  & > * {
    fill: var(--input-adornment);
    transition: fill variables.$default-transition-time variables.$default-transition-easing;
  }
}

.errorMessage {
  margin-top: 4px;
}
