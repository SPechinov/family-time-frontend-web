@use "../../../assets/styles/text_mixins";
@use "../../../assets/styles/variables";

.wrapper {
  width: 100%;

  &.error {
    .input {
      border-color: var(--input-error);
    }
    .placeholder {
      color: var(--input-error);
    }
  }

  &.disabled {
    .input {
      color: var(--input-disabled-text);
    }
  }

  &.readOnly {
    .input {
      border-style: dashed;
    }
  }
}

.inner {
  position: relative;
  overflow: hidden;
}

.input {
  @include text_mixins.text-form;
}

.input {
  width: 100%;
  color: var(--input-text);
  padding: 20px 18px 6px 18px;
  background-color: var(--input-background);
  border: 2px solid var(--input-border);
  border-radius: 12px;
  outline: none;

  &:hover:not(:disabled):not(:read-only),
  &:focus:not(:disabled):not(:read-only) {
    & ~ .placeholder {
      color: var(--input-text);
    }

    & ~ .endAdornment {
      & > * {
        fill: var(--input-adornment-focused);
      }
    }
  }

  &:focus,
  &:not(:placeholder-shown) {
    & ~ .placeholder {
      @include text_mixins.text-form-placeholder-active;
    }
  }
}

.placeholder {
  @include text_mixins.text-form-placeholder;
  position: absolute;
  top: 8px;
  left: 20px;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  max-width: calc(100% - 40px);
  color: var(--input-placeholder);
  pointer-events: none;
  transition:
    font-size variables.$default-transition-time variables.$default-transition-easing,
    line-height variables.$default-transition-time variables.$default-transition-easing,
    color variables.$default-transition-time variables.$default-transition-easing;
}

.endAdornment {
  position: absolute;
  top: 50%;
  right: 20px;
  display: flex;
  align-items: center;
  transform: translateY(-50%);

  & > * {
    fill: var(--input-adornment);
    transition: fill variables.$default-transition-time variables.$default-transition-easing;
  }
}

.errorMessage {
  margin-top: 4px;
}
